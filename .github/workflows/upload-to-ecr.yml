name: Build and Push Image to ECR, and Trigger ECS Blue/Green Deployment

on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Login to Amazon ECR
              run: |
                  aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

            - name: Build and Push Docker Image
              run: |
                  IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/julius/photo-album:latest"
                  docker build -t photo-album .
                  docker tag photo-album:latest $IMAGE_URI
                  docker push $IMAGE_URI

            - name: Get Current ECS Task Definition
              id: get-task-def
              run: |
                  TASK_DEF_NAME="photo-album-td"
                  aws ecs describe-task-definition --task-definition $TASK_DEF_NAME --query taskDefinition > task-def.json

                  # Convert JSON into a single-line string and escape double quotes
                  TASK_DEF_JSON=$(jq -c '.' task-def.json)

                  # Store it properly in the GitHub Actions environment variable
                  echo "TASK_DEF_JSON=$TASK_DEF_JSON" >> $GITHUB_ENV

            - name: Update Task Definition with New Image
              id: update-task-def
              run: |
                  IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/julius/photo-album:latest"

                  NEW_TASK_DEF=$(jq --arg IMAGE "$IMAGE_URI" '.containerDefinitions[0].image=$IMAGE' task-def.json)

                  echo "$NEW_TASK_DEF" > new-task-def.json
                  NEW_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://new-task-def.json --query "taskDefinition.taskDefinitionArn" --output text)

                  echo "NEW_TASK_DEF_ARN=$NEW_TASK_DEF_ARN" >> $GITHUB_ENV

            - name: Trigger CodeDeploy Deployment
              run: |
                  aws deploy create-deployment \
                    --application-name AppECS-photo-album-cluster-photo-album-service \
                    --deployment-group-name DgpECS-photo-album-cluster-photo-album-service \
                    --revision revisionType=AppSpecContent,appSpecContent="{\"version\":\"0.0\",\"resources\":[{\"targetService\":{\"type\":\"AWS::ECS::Service\",\"properties\":{\"taskDefinition\":\"$NEW_TASK_DEF_ARN\"}}}]}"
